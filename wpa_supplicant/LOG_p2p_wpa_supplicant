P2P-wifi aka WiFi Direct


########MACADDRS
98:af:65:ce:18:6f #NUC
ba:27:eb:92:7c:8f #zero
9c:b6:d0:17:2c:8f #XPS13
d6:c9:4b:81:c2:73 #Moto Z3 play
1a:f0:e4:11:ef:ba #Redmi note 4




###Android vers RPi: préparation p2p dans /bin/wifi:

wpa_cli -i p2p-dev-wlan0 p2p_group_add persistent
wpa_cli -i p2p-wlan0-0 wps_pbc
ifconfig p2p-wlan0-0 192.168.49.1
udhcpd -S /etc/udhcpd.conf






###Android vers NUC: préparation p2p

#Préparer udhcpd (une seule fois)
copier busybox-1.31.1/examples/udhcp/udhcpd.conf dans /etc/
mkdir -p /var/lib/misc/
touch /var/lib/misc/udhcpd.leases

#Créer une iface p2p et la configurer
wpa_cli -i p2p-dev-wlan0 p2p_group_add persistent
ifconfig `ls /sys/class/net/ | grep p2p` 192.168.49.1

#Adapter udhcpd à l'interface p2p-wlan0-N 
sed -i "s/^interface.*$/interface `ls /sys/class/net/ | grep p2p`/g" /etc/udhcpd.conf
udhcpd -f /etc/udhcpd.conf

#autoriser les demandes de connexion sur p2p-wlan0-N 
#wpa_cli en interactive  (p2p = default interface) > wps_pbc 
wpa_cli -i `ls /sys/class/net/ | grep p2p` wps_pbc 

#Ecouter du socket.getOutputStream() new Socket("192.168.49.1", 5778) envoyé par Android
socat TCP-LISTEN:5778,fork -


###NUC vers zero pour du ssh

-/bin/wifi du zero (nb: loopback 'lo' pas indispensable)
wpa_cli -i p2p-dev-wlan0 p2p_group_add persistent
wpa_cli -i p2p-wlan0-0 wps_pbc
ifconfig p2p-wlan0-0 192.168.49.1
#udhcpd pas nécessaire pour NUC vers zero: j'ifconfig une IP fixe

-sur le NUC 
(< 120 s après démarrage du zero = timeout wps_pbc)
(nb: résiste au S2RAM du NUC, comme wlan0)

wpa_cli p2p_connect ba:27:eb:92:7c:8f pbc join
ifconfig `ls /sys/class/net/ | grep p2p` 192.168.49.2

avoir automatiquement l'interface p2p (p2p-wlan0-N):
ls /sys/class/net/ | grep p2p









#commandes diverses utiles pour le network
ip a 						#voir les interfaces disponibles (une p2p-wlan0-N est là?)
ls /var/run/wpa_supplicant/	#autre moyen de voir les interfaces disponibles
route -n 					#voir la gateway par défaut (utile pour rebasculer en mode http web classique sur le NUC)
ping www.windguru.cz		#voir si des paquets peuvent aller sur le www

#restaurer le http www après un udhcpc -i p2p-wlan0-N
route del -net 0.0.0.0 gw 192.168.49.1 netmask 0.0.0.0 dev p2p-wlan0-N #mais si tu disconnect normalement ça disparait
echo nameserver 192.168.1.1 > /etc/resolv.conf #normalement, maintenant /usr/share/udhcpc/default.script ne passe plus par modif resolv si pattern match regex "p2p-wlan0-"

#compil librairie wpa_supplicant: libwpa_client.so
INCLUDES="-I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src/utils"
gcc libwpa_connect.c $INCLUDES -lwpa_client

#accepter une demande de connexion venant d'un de mes devices Android, linux en client
p2p_listen
p2p_connect d6:c9:4b:81:c2:73 pbc go_intent=0 	#Moto Z3 play
p2p_connect 1a:f0:e4:11:ef:ba pbc go_intent=0 	#Redmi note 4
p2p_connect 7e:42:6e:7f:a3:da pbc go_intent=0 	#Poco M3
p2p_connect e2:c3:77:fd:59:5c pbc go_intent=0 	#Galaxy Tab S5e

udhcpc -i p2p-wlan0-
 
 
 
 
 
 
######## 
#120122
#essai NUC sans redémarrage sans set persistent_reconnect 1
wpa_cli -i p2p-dev-wlan0 p2p_group_add persistent
ifconfig `ls /sys/class/net/ | grep p2p` 192.168.49.1
modif interface dans /etc/udhcpd.conf
udhcpd -f /etc/udhcpd.conf
wpa_cli -i `ls /sys/class/net/ | grep p2p` wps_pbc


#110122
wpa_cli -i p2p-dev-wlan0 set persistent_reconnect 1
wpa_cli -i p2p-dev-wlan0 p2p_group_add persistent
ifconfig `ls /sys/class/net/ | grep p2p` 192.168.49.1
modif interface dans /etc/udhcpd.conf
udhcpd -f /etc/udhcpd.conf
wpa_cli -i p2p-wlan0-21 wps_pbc


#100122
Prmiers essais reconnect
Mot clé du jour: "persistent"
https://askubuntu.com/questions/892703/creating-persistent-p2p-groups-in-ubuntu

#090122 Recette propre pour NUC en GO, accepter une connexion Android

#Préparation udhcpcd
cp /initrd/mnt/dev_save/packages/busybox-1.31.1/examples/udhcp/udhcpd.conf /etc/
	# The start and end of the IP lease block
	start		192.168.49.20
	end		192.168.49.254
	# The interface that udhcpd will use
	interface p2p-wlan0-?
mkdir /var/lib/misc/
touch /var/lib/misc/udhcpd.leases


#Création groupe sur le NUC
wpa_cli -i p2p-dev-wlan0 p2p_group_add
ls /sys/class/net/ | grep p2p --> modifier interface dans /etc/udhcpd.conf

#Attribution IP interface p2p sur le NUC
ifconfig `ls /sys/class/net/ | grep p2p` 192.168.49.1

#Lancer udhcpd en front pour voir Android demander une IP
udhcpd -f /etc/udhcpd.conf

#Accepter la connexion qui va arriver
wpa_cli -i `ls /sys/class/net/ | grep p2p` wps_pbc

#Vérifier que le tel est connecté
ping 192.168.49.20






#Déconnecter
wpa_cli -i `ls /sys/class/net/ | grep p2p` disconnect

#Retirer le groupe si nécessaire
wpa_cli -i p2p-dev-wlan0 p2p_group_remove `ls /sys/class/net/ | grep p2p`





#311221 ssh du NUC vers le zero en p2p

-sysinit du zero (nb: loopback 'lo' pas indispensable)
wpa_cli -i p2p-dev-wlan0 p2p_group_add
wpa_cli -i p2p-wlan0-0 wps_pbc
ifconfig p2p-wlan0-0 192.168.49.1
udhcpd -S /etc/udhcpd.conf #pour Android au départ

-sur le NUC 
(< 120 s après démarrage du zero pour wps_pbc???timeout vraiment???)
(nb: résiste au S2RAM du NUC, comme wlan0)

wpa_cli p2p_connect ba:27:eb:92:7c:8f pbc join
ifconfig `ls /sys/class/net/ | grep p2p` 192.168.49.2

avoir automatiquement l'interface p2p (p2p-wlan0-N):
ls /sys/class/net/ | grep p2p




#271221 Recette propre pour connecter deux linux:
exple avec NUC (GO) et XPS13
-Sur le NUC (GO)
wpa_cli -i p2p-dev-wlan0 p2p_group_add #une iface p2p-wlan0-N apparait dans ifconfig
wpa_cli -i p2p-wlan0-N wps_pbc

-Sur le XPS13
wpa_cli en interface "device" (p2p-dev-wlan0)
> p2p_find #jusqu'à ce que le NUC apparaisse (pour avoir son adr MAC, mais est ce que on ne peut pas lancer directement connect si on a la MAC?)
> p2p_stop_find #juste pour arrêter d'avoir de nouvelles lignes
> p2p_connect 98:af:65:ce:18:6f pbc join

--> une iface p2p-wlan0-N apparait dans ifconfig

-attribution des adresses IP sur chaque machine: 
ifconfig p2p-wlan0-N 192.168.49.1
ifconfig p2p-wlan0-N 192.168.49.2

-Vérification du fonctionnement:
	-ping de l'autre IP
	-serveur http: 
		1) Démarrer un serveur minimaliste dans un dir avec un/des fichiers à partager (rien a installer de pythonesque en plus dans focus):
			python3 -m http.server 1337
		2) Sur l'autre ordi récupérer le fichier avec
			wget http://192.168.49.N:1337/nom_du_fichier

-Déconnexion 
	côté GO: wpa_cli -i p2p-dev-wlan0 p2p_group_remove p2p-wlan0-1
	côté client: wpa_cli -i p2p-wlan0-N disconnect 
	
	--> les interfaces p2p-wlan0-N disparaissent de ifconfig


#161221
Première connexion (i.e. pas de reconnexion après une première connexion):
Linux as GO, Android as client
- 1) Linux = NUC: redémarrage frais du NUC et du tel
- 2) Linux = RPi: reboot frais RPi seulement (tel pas besoin). NB parfaitement possible de contrôler le RPi en ssh via router (wifi standard)
	

* Préparation udhcpcd
cp /initrd/mnt/dev_save/packages/busybox-1.31.1/examples/udhcp/udhcpd.conf /etc/
	# The start and end of the IP lease block
	start		192.168.49.20
	end		192.168.49.254
	# The interface that udhcpd will use
	interface p2p-wlan0-0
mkdir /var/lib/misc/
touch /var/lib/misc/udhcpd.leases

wpa_cli -i p2p-dev-wlan0 p2p_group_add --> crée une p2p-wlan0-0
wpa_cli -i p2p-wlan0-0 wps_pbc
nb je n'ai pas besoin de faire de lancer un p2p_listen!

ifconfig p2p-wlan0-0 192.168.49.1
udhcpd -f /etc/udhcpd.conf

lancer l'appli Android, cliquer sur l'interface graphique pour qu'elle reste en fg
Android demande une IP -> je le vois quand udhcpd est en foreground, allouée = toujours 192.168.49.20
je peux pinger Android depuis linux: ping 192.168.49.20

je peux automatiser au boot avec dans /bin/wifi :

wpa_cli -i p2p-dev-wlan0 p2p_group_add
wpa_cli -i p2p-wlan0-0 wps_pbc
ifconfig p2p-wlan0-0 192.168.49.1
udhcpd -S /etc/udhcpd.conf


#011221
Je découvre qu'avec le RPi en client je n'ai jamais P2P-GROUP-REMOVED contrairement au NUC

JE commence à essayer d'avoir le RPi en GO:

#Côté rpi (GO)
wpa_cli -i p2p-dev-wlan0 p2p_group_add
--> crée une p2p-wlan0-0
wpa_cli -i p2p-wlan0-0 wps_pbc
ifconfig p2p-wlan0-0 192.168.49.2

#Côté NUC (client, juste pour essais), sur p2p-dev-wlan0
p2p_find
p2p_connect ba:27:eb:92:fc:8f pbc join
ifconfig p2p-wlan0-19 192.168.49.1


Avec le tel en client: sans attribution IP via DHCP il se déconnecte
ifconfig p2p-wlan0-0 192.168.49.1
busybox-1.31.1/examples/udhcp/udhcpd.conf
editer /etc/udhcpd.conf --> interface p2p-wlan0-0
udhcpd -f /etc/udhcpd.conf


#291121
dbus
killall wpa_supplicant
dbus-daemon --system
wpa_supplicant -iwlan0 -c/etc/wpa_supplicant.conf -u
dbus: Could not request service name: org.freedesktop.DBus.Error.AccessDenied Connection ":1.0" is not allowed to own the service "fi.w1.wpa_supplicant1" due to security policies in the configuration file

google sur l'erreur: chez arch:
https://bbs.archlinux.org/viewtopic.php?id=231341

kill -1 `pgrep dbus` 
--> cat /var/log/messages
Nov 29 09:22:04 (none) daemon.info dbus-daemon[3183]: [system] Reloaded configuration


/usr/share/dbus-1/system.d/ est vide --> y mettre fichier de config (je maintiens dans le github p2p_wifi: 

je crée un 
/usr/share/dbus-1/system.d/dbus_policy_wpa_supplicant.conf

j'y met le contenu de https://bbs.archlinux.org/viewtopic.php?id=231341 (post du 291017)
kill -1 `pgrep dbus` 
wpa_supplicant -iwlan0 -c/etc/wpa_supplicant.conf -u
--> ne plante pas

dbus-send --system --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
...
fi.w1.wpa_supplicant1
...

import dbus
https://dbus.freedesktop.org/releases/dbus-python/dbus-python-1.2.18.tar.gz	./configure --prefix=/usr  python3 --> import dbus OK

import gobject --> je crois que pas possible donc: from gi.repository import GObject as gobject
pygobject-3.42.0.tar.xz lien vers source des tarballs: https://pygobject.readthedocs.io/en/latest/bugs_repo.html
	 meson builddir --prefix=/usr && ninja -C builddir && ninja install -C builddir puis from gi.repository import GObject as gobject



#281121
reprise de core.sfs
wpa_cli -i wlan0 -a /usr/share/wpa_action_scripts/wpa_action_wlan0.sh &


#261121
repasser en listen après déconnexion ou failure connexion:
à quoi je dois réagir dans mon client perso pour repasser en listen? Qu'est ce qui peut arriver?
P2P-GO-NEG-FAILURE
P2P-GROUP-REMOVED p2p-wlan0-84 client reason=IDLE
P2P-DEVICE-LOST p2p_dev_addr=d6:c9:4b:81:c2:73

p2p_flush could help????


#251121
je modifie /usr/share/udhcpc/default.script pour ne pas avoir à restaurer /etc/resolv.conf à chaque fois
		##/etc/resolv.conf que si ce n'est pas du wifi direct P2P
		pattern="^p2p-wlan0-"
		if ! [[ $interface =~ $pattern ]];then
			echo "Recreating $RESOLV_CONF"
				...
			mv "$tmpfile" "$realconf"
		fi





#241121
action script wlan0:
J'arrive à faire fonctionner l'action script (initialement je n'avais pas réussi à faire du logger -/var/log/messages- avec,
 m'avait déprimé, pourtant fonctionne sans problème maintenant)
wpa_cli -iwlan0 -a /root/action_wpa.sh #et dans une autre console wpa_cli -iwlan0 disconnect puis reconnect
wpa_cli -a /root/action_wpa.sh
$1 ==> p2p-dev-wlan0
$2 ==> P2P-GROUP-STARTED ou P2P-GROUP-REMOVED


action script P2P:
inspiration dans: wpa_supplicant/examples/p2p-action.sh 
#!/bin/bash
echo "debut action script" $1 $2 $3 $4
if [ "$2" = "P2P-GROUP-STARTED" ]; then
	echo "RX P2P-GROUP-STARTED " $1 $2 $3 $4
	udhcpc -i $3 #GIFNAME Group Interface Name
fi	



#231121
déconnexions intempestives, ressemble à un timeout
<3>P2P-GO-NEG-SUCCESS role=client freq=2412 ht40=0 peer_dev=1a:f0:e4:11:ef:ba peer_iface=1a:f0:e4:11:ef:ba wps_method=PBC
<3>CTRL-EVENT-SCAN-RESULTS 
<3>P2P-GROUP-FORMATION-SUCCESS 
<3>P2P-GROUP-STARTED p2p-wlan0-10 client ssid="DIRECT-Ag-Android_b010" freq=2412 psk=bf9c67ffef16957b8c209aac32bc300802fe0c29daf62b738609aab9ac701a71 go_dev_addr=1a:f0:e4:11:ef:ba [PERSISTENT]
<3>P2P-GROUP-REMOVED p2p-wlan0-10 client reason=IDLE
<3>P2P-DEVICE-LOST p2p_dev_addr=1a:f0:e4:11:ef:ba

sans p2p_listen je ne vois rien, et le reconnect ne marche pas.
dès que je p2p_listen je reçois des
<3>P2P-INVITATION-RECEIVED sa=1a:f0:e4:11:ef:ba persistent=19
...
<3>P2P-DEVICE-LOST p2p_dev_addr=1a:f0:e4:11:ef:ba
et impossible de répondre à l'invitation
j'arrive à avoir reconnexion automatique avec:
set persistent_reconnect 1


https://thangamaniarun.wordpress.com/category/p2p-go/
https://coderedirect.com/questions/661242/wifi-direct-connection-disconnects-automatically-after-a-few-seconds-in-raspberr

Pour restaurer le resolv une fois connexion effectuée j'y arrive avec:
route del -net 0.0.0.0 gw 192.168.49.1 netmask 0.0.0.0 dev p2p-wlan0-29
/etc/resolv.conf --> une seule ligne --> nameserver 192.168.1.1


#081121
X-compil
arm-linux-gnueabihf-gcc libwpa_test.c \
> -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src/utils \
> -lwpa_client -o libwpa_test

#071121
arriver à conditionner sur la string:
<3>P2P-GO-NEG-REQUEST d6:c9:4b:81:c2:73 dev_passwd_id=4 go_intent=7b:81:c2:73 bssid=d6:c9:4b:81:c2:73 unknown-networkad' config_methods=0x188 dev_capab=0x25 group_capab=0x0 vendor_elems=1 new=1

https://www.tutorialspoint.com/c_standard_library/c_function_strstr.htm

if (strstr(buf_m, "P2P-GO-NEG-REQUEST d6:c9:4b:81:c2:73"))printf("match\n");

len = sizeof(buf) - 1; //il faut réassigner une valeur qui puisse contenir la chaine de caractères
 avant chaque utilisation (wpa_ctrl_request, wpa_ctrl_recv), sinon segfault (si jamais initialisé) ou reste à la première valeur



#051121
Listen les events P2P
Des exemples de code utilisant la fonction wpa_ctrl_recv(), idéalement avec un loop simple

https://source.codeaurora.org/external/gigabyte/ag-gb-dsds-7227/plain/hardware/libhardware_legacy/wifi/wifi.c


https://forum.openwrt.org/t/how-do-i-get-a-notification-when-a-station-is-associated/102904
--> simple.

j'essaie avec searchstring google: "wpa_ctrl_recv loop"
https://hostap.epitest.fi/wpa_supplicant/wpa_supplicant-devel-04.pdf --> parle de eloop, je l'ai déjà vu, mais si pars en eloop ça a l'air compliqué
https://stackoverflow.com/questions/47581814/get-signal-level-of-the-connected-wifi-network
--> il ne donne pas son code mais cette phrase décrit ce que je veux:
"On the API level my code is straightforward. I have two threads for that, both call wpa_ctrl_open, 
the command thread calls wpa_ctrl_request, the event thread has an endless loop that calls poll passing wpa_ctrl_get_fd() descriptor and POLLIN event mask, 
followed by wpa_ctrl_pending and wpa_ctrl_recv."

j'essaie avec searchstring google: "wpa_ctrl_recv eloop"
https://web.mit.edu/freebsd/head/contrib/wpa/hostapd/hostapd_cli.c
utilise include "utils/eloop.h" --> compliqué



#041121
Premiere commande perso passée en C via wpa_ctrl_request()
à partir de wpa_supplicant/libwpa_test.c
j'ajoute aux bons endroits:
	char *buf;	
	size_t len = 1000;
	
	
	if (wpa_ctrl_attach(ctrl) == 0){
		wpa_ctrl_request(ctrl, "P2P_LISTEN 30", 13, buf, &len, NULL);
		printf("reponse: %s \n",buf);
		...
 

#221021
cross compil
je cross compilais wpa_supplicant avec CC=arm-linux-gnueabihf-gcc make
j'essaie plus élégament, depuis la racine avec changement de path avec:

export PATH=$PATH:/initrd/mnt/dev_save/rpi/cross/bin/
CC=arm-linux-gnueabihf-gcc make -C wpa_supplicant

du coup pour x compiler la librairie libwpa_client.so:
CC=arm-linux-gnueabihf-gcc make -C wpa_supplicant libwpa_client.so
mais attention après au runtime avec le hello world (wpa_supplicant/libwpa_test.c) j'ai
/libwpa_test: symbol lookup error: ./libwpa_test: undefined symbol: wpa_ctrl_open

effectivement (sur le NUC cause nm ne fonctionne pas sur le RPi):
nm wpa_supplicant/libwpa_client.so | grep open #ne montre pas wpa_ctrl_open

je passe -DCONFIG_CTRL_IFACE -DCONFIG_CTRL_IFACE_UNIX au compilateur en modifiant la target de la Makefile (li 1936
qui commence par libwpa_client.so, deux lignes en dessous la ligne CC): ajouter -DCONFIG_CTRL_IFACE -DCONFIG_CTRL_IFACE_UNIX


maintenant cross compiler le hello world pour utiliser cette librairie?
pour compilation pour que linker puis la trouver je la copie dans /initrd/mnt/dev_save/rpi/cross_zero/arm-linux-gnueabihf/lib


arm-linux-gnueabihf-gcc wpa_supplicant/libwpa_test.c \
-I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src/utils \
-lwpa_client -o libwpa_test




#211021 ##### libwpa_client.so
libwpa_client.so buildée avec 
CC=gcc make -C wpa_supplicant libwpa_client.so
puis chmod a+x, cp /usr/lib64 et ldconfig
j'arrive à builder le hello world (non modifié) de:
https://stackoverflow.com/questions/38215480/getting-started-with-wpa-supplicant-using-c
avec:
gcc main.c -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src/common -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src/utils -lwpa_client

je trouve un hello world pour l'utilisation de la librairie, dans les sources wpa_supplicant: wpa_supplicant/libwpa_test.c

gcc libwpa_test.c -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src -I/initrd/mnt/dev_save/packages/wpa_supplicant-2.9/src/utils -lwpa_client

ctrl = wpa_ctrl_open("/var/run/wpa_supplicant/wlan0");
	ou
ctrl = wpa_ctrl_open("/var/run/wpa_supplicant/p2p-dev-wlan0");



#J2 191021 LGM
Début lecture sources
recherche pistes
wpa_supplicant/notify.h
wpa_supplicant/ctrl_iface_unix.c 
syslog?

<3>CTRL-EVENT-SCAN-RESULTS 
<3>P2P-DEVICE-FOUND d6:c9:4b:81:c2:73 p2p_dev_addr=d6:c9:4b:81:c2:73 pri_dev_type=10-0050F204-5 name='Moto Z3 Play_8fad' config_methods=0x188 dev_capab=0x25 group_capab=0x0 vendor_elems=1 new=1
<3>P2P-INVITATION-RECEIVED sa=d6:c9:4b:81:c2:73 go_dev_addr=d6:c9:4b:81:c2:73 bssid=d6:c9:4b:81:c2:73 unknown-network
<3>P2P-GO-NEG-REQUEST d6:c9:4b:81:c2:73 dev_passwd_id=4 go_intent=7
<3>P2P-GO-NEG-REQUEST d6:c9:4b:81:c2:73 dev_passwd_id=4 go_intent=7

define P2P_EVENT_INVITATION_RECEIVED "P2P-INVITATION-RECEIVED "
src/common/wpa_ctrl.h
src/common/wpa_ctrl.c
--> est ce que qqun a déjà fait du code qui réagit à un des events de ce .h (mais pas des events p2p c'est trop confidentiel)

/** Authentication completed successfully and data connection enabled */
#define WPA_EVENT_CONNECTED "CTRL-EVENT-CONNECTED "
/** Disconnected, data connection is not available */
#define WPA_EVENT_DISCONNECTED "CTRL-EVENT-DISCONNECTED "

***https://w1.fi/wpa_supplicant/devel/ctrl_iface_page.html***
"wpa_supplicant implements a control interface that can be used by external programs to control the operations of the wpa_supplicant daemon and to get status information and event notifications. "
  Piste LGM ++++++++



#J1 181021 MTP 
Malgré les exemples dans le code source wpa_supplicant: pas envie de me lancer dans dbus

Si dans un script avec wpa_cli je lance un connect, il accepte combien de temps???

set le listen avec wpa_cli

p2p_ext_listen 200 2000


p2p_connect d6:c9:4b:81:c2:73 pbc go_intent=0

set persistent_reconnect 1


OK 2 notions importantes:
Comme d'hab, quitter l'appli Android puis redémarrer peut aider à re-trouver un peer
quand j'ai [PERSISTENT] à la connexion, set persistent_reconnect  1 a l'air de faciliter l'acceptation de connexion

si je tape dans les sources directement à l'endroit où acceptation d'un groupe persitant avec
connexion préétablie: il y a obligatoirement une struct avec le peer.



